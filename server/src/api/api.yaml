openapi: 3.0.0
info:
  description: |
    This is the API for a suit of KeepMy apps. For more information, please visit
    [GitHub](https://github.com/itsabusinessnow/keep-my-serve)
  version: "1.0.0"
  title: Keep My - Serve
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: itsabusinessnow@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/StaberindeZA/keep-my-serve/1.0.0
tags:
  - name: actor
    description: Any person or character
  - name: simpleText
    description: Any simple text with abstract
  - name: auth
    description: Operations about auth login
paths:
  /actor:
    post:
      tags:
        - actor
      summary: Add a new actor to the organisation
      operationId: addActor
      responses:
        "405":
          description: Invalid input
      requestBody:
        $ref: "#/components/requestBodies/Actor"
    get:
      tags:
        - actor
      summary: Finds Actors
      description: Multiple status values can be provided with comma separated strings
      operationId: returnAllActors
      parameters:
        - name: options
          in: query
          description: Options for what actors to return
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - private
                - public
              default: private
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SimpleText"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SimpleText"
        "400":
          description: Invalid status value
  "/actor/{actorId}":
    get:
      tags:
        - actor
      summary: Find actor by ID
      description: Returns a single Actor
      operationId: getActorById
      parameters:
        - name: actorId
          in: path
          description: ID of actor to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Actor"
        "400":
          description: Invalid ID supplied
        "404":
          description: Actor not found
    put:
      tags:
        - actor
      summary: Update an existing actor
      operationId: updateActor
      parameters:
        - name: actorId
          in: path
          description: ID of actor to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception
      requestBody:
        $ref: "#/components/requestBodies/Actor"
    delete:
      tags:
        - actor
      summary: Deletes an actor
      operationId: deleteActor
      parameters:
        - name: actorId
          in: path
          description: Actor id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Actor not found
  "/actor/{actorId}/uploadAvatar":
    post:
      tags:
        - actor
      summary: uploads an image
      operationId: uploadAvatar
      parameters:
        - name: actorId
          in: path
          description: ID of actor to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
  /simpleText:
    post:
      tags:
        - simpleText
      summary: Add a new simpleText record to the organisation
      operationId: addSimpleText
      responses:
        "405":
          description: Invalid input
      requestBody:
        $ref: "#/components/requestBodies/SimpleText"
    get:
      tags:
        - simpleText
      summary: Finds SimpleText
      description: Multiple status values can be provided with comma separated strings
      operationId: returnAllSimpleText
      parameters:
        - name: options
          in: query
          description: Options for what actors to return
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - private
                - public
              default: private
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SimpleText"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SimpleText"
        "400":
          description: Invalid status value
  "/simpleText/{simpleTextId}":
    get:
      tags:
        - simpleText
      summary: Find Simple Text by ID
      description: Returns a single Simple Text record
      operationId: getSimpleTextById
      parameters:
        - name: simpleTextId
          in: path
          description: ID of simple text record to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleText"
        "400":
          description: Invalid ID supplied
        "404":
          description: Simple Text not found
    put:
      tags:
        - simpleText
      summary: Update an existing simple text record
      operationId: updateSimpleText
      parameters:
        - name: simpleTextId
          in: path
          description: ID of simple text record to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Simple Text record not found
        "405":
          description: Validation exception
      requestBody:
        $ref: "#/components/requestBodies/SimpleText"
    delete:
      tags:
        - simpleText
      summary: Deletes a simple text record
      operationId: deleteSimpleText
      parameters:
        - name: simpleTextId
          in: path
          description: Simple text id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Simple text record not found
  /auth/logout:
    get:
      tags:
        - auth
      summary: Logout currently logged in user
      description: This can only be done by the logged in user.
      operationId: authLogout
      responses:
        default:
          description: successful operation
  /auth/google/login:
    get:
      tags:
        - auth
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: authGoogleLogin
      responses:
        default:
          description: successful operation
  /auth/google/callback:
    get:
      tags:
        - auth
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: authGoogleCallback
      responses:
        default:
          description: successful operation
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
components:
  schemas:
    Actor:
      type: object
      required:
        - firstName
      properties:
        _id:
          type: integer
          format: int64
        public:
          type: boolean
        birthDate:
          type: string
          format: date-time
        deathDate:
          type: string
          format: date-time
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - M
            - F
            - O
            - N
            - U
        nationality:
          type: string
        website:
          type: string
    SimpleText:
      type: object
      required:
        - text
      properties:
        _id:
          type: integer
          format: int64
        public:
          type: boolean
        text:
          type: string
        abstract:
          type: string
        authorActor:
          type: integer
          format: int64
          description: Actor ID of who said it?
        recipientActors:
          type: array
          items:
            type: integer
            format: int64
          description: Actor IDs of who it was said too.
        date:
          type: string
          format: date-time
        location:
          type: object
          properties:
            coordiantes:
              type: array
              items:
                type: integer
                format: int64
            address:
              type: string
        sourceUrl:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Actor:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Actor"
      description: Actor object
      required: true
    SimpleText:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimpleText"
      description: SimpleText object
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
          scopes:
            "write:pets": modify pets in your account
            "read:pets": read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
